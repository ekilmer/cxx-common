name: CI CD

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  Docker_Linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        llvm: ["900", "1000", "1100"]
        ubuntu: ["20.04", "18.04"]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      name: Cache build artifact store
      with:
        path: ./cache
        # https://github.com/actions/cache/issues/109 "Enable always writing cache to support hermetic build systems"
        # https://github.com/actions/cache/issues/239#issuecomment-606950711 Investigate this workaround if cache starts filling up
        key: store-${{ runner.os }}-${{ matrix.ubuntu }}-${{ matrix.llvm }}-${{ github.sha }}
        restore-keys: |
          store-${{ runner.os }}-${{ matrix.ubuntu }}-${{ matrix.llvm }}-
          store-${{ runner.os }}-${{ matrix.ubuntu }}-
          store-${{ runner.os }}-
    - name: Build LLVM ${{ matrix.llvm }} on ${{ matrix.ubuntu }}
      run: |
        docker build . -t docker.pkg.github.com/trailofbits/cxx-common/llvm${{ matrix.llvm }}-ubuntu${{ matrix.ubuntu }}-amd64:latest -f Dockerfile --build-arg UBUNTU_BASE=ubuntu:${{ matrix.ubuntu }} --build-arg LLVM_VERSION=${{ matrix.llvm }}
    - name: Grab Cache
      run: |
        docker build . -t docker.pkg.github.com/trailofbits/cxx-common/llvm${{ matrix.llvm }}-ubuntu${{ matrix.ubuntu }}-amd64-build:latest -f Dockerfile --build-arg UBUNTU_BASE=ubuntu:${{ matrix.ubuntu }} --build-arg LLVM_VERSION=${{ matrix.llvm }} --target cxx-common-build
        docker run --rm --entrypoint /bin/bash -v $(pwd)/cache:/tmp docker.pkg.github.com/trailofbits/cxx-common/llvm${{ matrix.llvm }}-ubuntu${{ matrix.ubuntu }}-amd64-build:latest -c "cp -r ./cache/* /tmp"
    - name: Push Image for LLVM ${{ matrix.llvm }} on ${{ matrix.ubuntu }}
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        docker login docker.pkg.github.com -u publisher -p "${GITHUB_PACKAGE_REGISTRY_TOKEN}"
        for i in 1 2 3; do docker push docker.pkg.github.com/trailofbits/cxx-common/llvm${{ matrix.llvm }}-ubuntu${{ matrix.ubuntu }}-amd64:latest && break || sleep 10; done
        docker login -u "${DOCKER_HUB_USER}" -p "${DOCKER_HUB_TOKEN}"
        docker tag docker.pkg.github.com/trailofbits/cxx-common/llvm${{ matrix.llvm }}-ubuntu${{ matrix.ubuntu }}-amd64:latest trailofbits/cxx-common:llvm${{ matrix.llvm }}-ubuntu${{ matrix.ubuntu }}-amd64
        docker push trailofbits/cxx-common:llvm${{ matrix.llvm }}-ubuntu${{ matrix.ubuntu }}-amd64
      env:
        GITHUB_PACKAGE_REGISTRY_TOKEN: ${{  secrets.GITHUB_PACKAGE_REGISTRY_TOKEN  }}
        DOCKER_HUB_USER: ${{  secrets.DOCKER_HUB_USER  }}
        DOCKER_HUB_TOKEN: ${{  secrets.DOCKER_HUB_TOKEN  }}
    - name: Compress Artifacts LLVM ${{ matrix.llvm }} on ${{ matrix.ubuntu }}
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        mkdir -p artifacts
        cp -v emit-artifact.sh ./artifacts/
        docker run -v "$(pwd)/artifacts:/out" --rm docker.pkg.github.com/trailofbits/cxx-common/llvm${{ matrix.llvm }}-ubuntu${{ matrix.ubuntu }}-amd64:latest -c "/out/emit-artifact.sh /out/libraries-llvm${{ matrix.llvm }}-ubuntu${{ matrix.ubuntu }}-amd64.tar.xz"
        ls -l artifacts/
    - uses: actions/upload-artifact@v1
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      with:
        name: libraries-llvm${{ matrix.llvm }}-ubuntu${{ matrix.ubuntu }}-amd64.tar.xz
        path: artifacts/libraries-llvm${{ matrix.llvm }}-ubuntu${{ matrix.ubuntu }}-amd64.tar.xz
  macOS:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      name: Cache build artifact store
      with:
        path: ./cache
        # https://github.com/actions/cache/issues/109 "Enable always writing cache to support hermetic build systems"
        # https://github.com/actions/cache/issues/239#issuecomment-606950711 Investigate this workaround if cache starts filling up
        key: store-${{ runner.os }}-${{ github.sha }}
        restore-keys: |
          store-${{ runner.os }}-
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Run Tests
      run: |
        ./travis.sh osx initialize
        ./travis.sh osx build
    - name: Compress Artifacts for macOS
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        brew install pixz
        tar --use-compress-program pixz -cf libraries-catalina-macos.tar.xz -C /usr/local/share/trailofbits libraries
    - uses: actions/upload-artifact@v1
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      with:
        name: libraries-catalina-macos.tar.xz
        path: libraries-catalina-macos.tar.xz
  CreateRelease:
    needs: [macOS, Docker_Linux]
    runs-on: ubuntu-latest
    steps:
    - name: Increment Release Version
      id: release_ver
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: |
        curl -H "Authorization: token ${GITHUB_TOKEN}" -s https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/latest | jq -r '[.tag_name][0] | split(".") as $ver | $ver[-1]|tonumber as $last | $ver[:-1] as $first | $first + [$last+1] | map(tostring) |  join(".")' > version
        echo "::set-output name=VERSION::$(<version)"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Download all artifacts
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: actions/download-artifact@v2
      with:
        path: releases
    - name: Verify Artifact Downloads
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      run: ls -R
    - name: Publish Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.release_ver.outputs.VERSION }}
        files: releases/*/*.xz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
